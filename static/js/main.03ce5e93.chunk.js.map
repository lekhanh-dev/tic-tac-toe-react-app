{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","style","color","value","Board","i","key","this","squares","colors","square","row","j","push","renderSquare","React","Component","Game","state","history","Array","fill","coord","col","stepNumber","xIsNext","isAscending","slice","current","length","coor","calculateWinner","setState","concat","step","location","sort","status","winner","isFullBoard","index","checkFullBoard","moves","map","move","desc","jumpTo","reverse","hightLightWins","handleClick","sortMoves","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03ce5e93.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick} style={{color: props.color}}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square key={i}\r\n        value={this.props.squares[i]}\r\n        color={this.props.colors[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // Use two loop to make squares\r\n    const boardSize = 3;\r\n    let square = [];\r\n    for (let i = 0; i < boardSize; i++) {\r\n      let row = [];\r\n      for (let j = 0; j < boardSize; j++) {\r\n        row.push(this.renderSquare(i * boardSize + j))\r\n      }\r\n      square.push(<div key={i} className=\"board-row\">{row}</div>)\r\n    }\r\n\r\n    return (\r\n      <div>{square}</div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          coord: {\r\n            col: 0,\r\n            row: 0\r\n          },\r\n          colors: Array(9).fill('black')\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n      isAscending: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    const colors = current.colors.slice();\r\n\r\n    const coor = {\r\n      col: 0,\r\n      row: 0\r\n    }\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n\r\n    switch (i) {\r\n      case 0:\r\n        coor.col = 1;\r\n        coor.row = 1;\r\n        break;\r\n      case 1:\r\n        coor.col = 2;\r\n        coor.row = 1;\r\n        break;\r\n      case 2:\r\n        coor.col = 3;\r\n        coor.row = 1;\r\n        break;\r\n      case 3:\r\n        coor.col = 1;\r\n        coor.row = 2;\r\n        break;\r\n      case 4:\r\n        coor.col = 2;\r\n        coor.row = 2;\r\n        break;\r\n      case 5:\r\n        coor.col = 3;\r\n        coor.row = 2;\r\n        break;\r\n      case 6:\r\n        coor.col = 1;\r\n        coor.row = 3;\r\n        break;\r\n      case 7:\r\n        coor.col = 2;\r\n        coor.row = 3;\r\n        break;\r\n      case 8:\r\n        coor.col = 3;\r\n        coor.row = 3;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares,\r\n        coord: coor,\r\n        colors: colors\r\n      }]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  sortMoves() {\r\n    this.setState({\r\n      isAscending: !this.state.isAscending,\r\n    })\r\n  }\r\n\r\n  hightLightWins(location) {\r\n    let size = 3;\r\n    let colors = this.state.history[this.state.stepNumber].colors;\r\n    for(let i = 0; i < size; i++) {\r\n      colors[location[i]] = \"red\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const isFullBoard = checkFullBoard(current.squares);\r\n\r\n    let moves = history.slice().map((step, move) => {\r\n      const desc = move ?\r\n        `Go to move #${move} (${step.coord.col}, ${step.coord.row})` :\r\n        'Go to game start';\r\n      if (move === this.state.stepNumber) {\r\n        return (\r\n          <li key={move}>\r\n            <button style={{ color: 'red' }} onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      }\r\n      else {\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        );\r\n      }\r\n    });\r\n\r\n    if(!this.state.isAscending) {\r\n      moves = moves.reverse();\r\n    }\r\n    \r\n    let sort;\r\n    if (this.state.isAscending) {\r\n      sort = \"descending\";\r\n    } else {\r\n      sort = \"ascending\";\r\n    }\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner.winner;\r\n      this.hightLightWins(winner.location);\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      if(isFullBoard){\r\n        status = \"No one wins\";\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            colors={current.colors}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <button className=\"sortMoves\" onClick={() => this.sortMoves()}>{sort}</button>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return { \r\n                winner: squares[a],\r\n                location: lines[i]\r\n             }\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nfunction checkFullBoard(square) {\r\n  for (let index = 0; index < square.length; index++) {\r\n    if(!square[index])\r\n      return false;\r\n  }\r\n  return true;\r\n}"],"sourceRoot":""}